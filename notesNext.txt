Run the app by running dev script from package.json "npm run dev".
------------------------------------------------------------------

NEXT JS 13 has app folder, which contains layout.tsx and page.tsx (default route will redirect to page.tsx which is first child of app folder 
and layout.tsx contains the layout which will be applied to every page.tsx in the sme level and in the child level.)

------------------------------------------------------------------
https://nextjs.org/learn/seo/rendering-and-ranking/metadata
Layout.tsx in the app folder has const "metadata". This "metadata" is reserved constant in Next 13 layout file where we can control
the title, description and othe options.

------------------------------------------------------------------
https://www.youtube.com/watch?v=L8_98i_bMMA&ab_channel=LeeRobinson
https://nextjs.org/docs/basic-features/font-optimization
https://nextjs.org/docs/api-reference/next/font
NEXT JS Fonts

const font = Nunito({
  subsets: ['latin']  
});

https://en.wiktionary.org/wiki/Appendix:Latin_script#:~:text=The%20ISO%20basic%20Latin%20alphabet,x%20Yy%20Zz
Here subsets means the ISO basic Latin alphabet, which is composed of 26 uppercase letters (ABCDEFGHIJKLMNOPQRSTUVWXYZ) and 26 lowercase versions of the same letters (abcdefghijklmnopqrstuvwxyz), resulting in the following pairs:
Aa Bb Cc Dd Ee Ff Gg Hh Ii Jj Kk Ll Mm Nn Oo Pp Qq Rr Ss Tt Uu Vv Ww Xx Yy Zz

className={font.className} // font.className will autogenerate class. 
The "className={font.className}" will apply this autogenerated class to our entire document.

Why should not we use font links in index.html?
Though this will work, but it comes with some issues:
Issue 1. First, the fallback font loads which is the system font, and then roboto is used.
In case of slow internet speeds, this will look a lot more painful.
Issue 2. Further, we have to make requests to google fonts to go retrieve this external font file every single time.

Solution: Host the font on our own NEXTJS Server and automatically figure out what the fall back font should be so that it 
perfectly matches and has the least amount of layout shift.
This is exactly what is been done by font optimization inside NEXT JS. 

https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide
https://web.dev/variable-fonts/
What are variable fonts and their benefits?
Variable fonts gives best performance.

------------------------------------------------------------------
https://beta.nextjs.org/docs/rendering/server-and-client-components
client vs Server Components
We have to explicitly make the components client, this is something we have to do when
working in the app folder because every component and page we create inside the app folder
is a server component by default.
There can be hydration problems if we mix and match imports with client and server components.
When to use Server vs. Client Components?
Moving Client Components to the Leaves, increases performance.
Cannot Import Server Components into Client Components. Why and what to do?
Passing props from Server to Client Components (Serialization) [Go to: 
      1. https://beta.nextjs.org/docs/data-fetching/fundamentals#fetching-data-with-server-components
      2. https://developer.mozilla.org/en-US/docs/Glossary/Serialization      
]
Where is the Network Boundary?
Keeping Server-Only Code out of Client Components (Poisoning) -> server-only and client-only npm packages
Handling Third-Party Packages as "use client" directive is a new React feature.
Data Fetching -> Recommended to fetch data on server side, unless specific reason to fetch on client-side.
Using Context and other state management tools with server components
Sharing data between Server Components
Sharing fetch requests between Server Components

------------------------------------------------------------------
https://beta.nextjs.org/docs/rendering/fundamentals#client-and-server-rendering-at-the-component-level
client vs server rendering
static vs dynamic rendering
react vs NEXT JS functionality 
How to rendering Client and Server Components in each other? Import and props: C in S | C in C | S in S ---- Only props or child S in C

------------------------------------------------------------------
https://www.youtube.com/watch?v=g0Jc5D6tiCo&ab_channel=CoderOne
React server Components in NEXT JS 13. 
How to make these server components SSR or SSG or ISR.

------------------------------------------------------------------
https://beta.nextjs.org/docs/data-fetching/fundamentals#fetching-data-with-server-components

------------------------------------------------------------------
https://atomizedobjects.com/blog/react/what-is-hydration-in-react-based-applications/
Hydration is the process of using client-side JavaScript to add application state and interactivity to server-rendered HTML.